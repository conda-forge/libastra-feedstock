{% set version = "2.1.2" %}
{% set commit = "a78e72fa77c314ad17fd3ab0926d03fd3af31471" %}
{% set build = 2 %}

{% set cuda_major = environ.get("cuda_compiler_version", "11.2").split(".")[0]|int %}

package:
  name: libastra
  version: {{ version }}

source:
  url: https://github.com/astra-toolbox/astra-toolbox/archive/{{ commit }}.tar.gz
  sha256: f66e2306f6fa9a41fd81466a845a13aa7976bb92de3d50c354965227954d1d8f
  patches:
    - cmake.patch
    - find-cuda.patch

build:
# Current tagged release does not compile for CUDA 12. Fix probably with v2.1.3 or later
  skip: true  # [cuda_compiler_version == "12.0"]
  skip: true  # [cuda_compiler_version == "11.2" and win]
  track_features:
    - nocuda_la6JwwDGF7  # [cuda_compiler_version == "None"]
  run_exports:
    - {{ pin_subpackage('libastra', max_pin='x.x.x') }}
    - libastra =*=cuda*  # [cuda_compiler_version != "None"]
    - libastra =*=h*     # [cuda_compiler_version == "None"]
  ignore_run_exports_from:
    # unix uses pthread, but win links to libboost:threads
    - libboost-devel  # [unix]
  number: {{ build }}
  string: "{{ "cuda" + cuda_compiler_version|string }}h{{ PKG_HASH }}_{{ build + 100 }}"  # [cuda_compiler_version != "None"]
  script_env:
    - ASTRA_USE_CUDA=ON   # [cuda_compiler_version != "None"]
    - ASTRA_USE_CUDA=OFF  # [cuda_compiler_version == "None"]
    - CUDAARCHS=all
    - CMAKE_GENERATOR=Ninja

requirements:
  build:
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - {{ compiler('cxx') }}
    # CMake policy max must be set to 3.22 for CMake to not autodetect architectures
    - cmake >=3.23
    - ninja
  host:
    # unix doesn't link, but needs CMake metadata at build time
    - libboost-devel
{% if cuda_major == 12 %}
    - cuda-cudart-dev
    - libcufft-dev
{% endif %}
  run:
    - __cuda  # [cuda_compiler_version != "None"]

test:
  requires:
  # libastra uses header-only from Boost, but the unit tests actually link to libboost_unit_test_framework.so
    - libboost
  source_files:
    - build/tests/astratest  # [unix]
    - build/tests/astratest.exe  # [win]
  commands:
    - test -f $PREFIX/lib/libastra${SHLIB_EXT}                          # [linux]
    - test -f $PREFIX/lib/libastra${SHLIB_EXT}.0                        # [linux]
    - test -f $PREFIX/lib/libastra${SHLIB_EXT}.0.0.0                    # [linux]
    - "LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./build/tests/astratest"  # [unix]
    # Library named differently from upstream because it makes linking
    # consistent between platforms. File links don't work on Windows.
    - if not exist %LIBRARY_LIB%\\astra.lib exit 1  # [win]
    - if not exist %LIBRARY_BIN%\\astra.dll exit 1  # [win]
    - build\\tests\\astratest                       # [win]

about:
  home: http://www.astra-toolbox.com
  license: GPL-3.0-only
  license_file:
    - COPYING
    - lib/licenses/rapidxml.txt
  summary: 'libastra is a C++ library of high-performance GPU primitives for 2D
  and 3D tomography.'

extra:
  recipe-maintainers:
    - carterbox
