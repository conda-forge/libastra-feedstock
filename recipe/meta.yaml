{% set version = "2.3.1" %}
{% set commit = "c9402b770efcc2721e6c49dec8428542e59f7a17" %}  # https://github.com/astra-toolbox/astra-toolbox/releases/tag/v2.3.1
{% set build_number = 1 %}

{% set cuda_major = environ.get("cuda_compiler_version", "11.2").split(".")[0]|int %}

package:
  name: libastra
  version: {{ version }}

source:
  url: https://github.com/astra-toolbox/astra-toolbox/archive/{{ commit }}.tar.gz
  sha256: 3b4484df8289518de9f31d985e70cb58b65a2a82b99a0d4b9ec5eecf8b96789f
  patches:
  # patch created from askorikov/astra-toolbox@release_2.3.1_cmake
    - cmake.patch

build:
  track_features:
    - nocuda_la6JwwDGF7  # [cuda_compiler_version == "None"]
  run_exports:
    - {{ pin_subpackage('libastra', max_pin='x.x.x') }}
    - libastra =*=cuda*  # [cuda_compiler_version != "None"]
    - libastra =*=h*     # [cuda_compiler_version == "None"]
  ignore_run_exports_from:
    # Only used for unit tests
    - libboost-devel
  number: {{ build_number }}
  string: "{{ "cuda" + cuda_compiler_version|string }}h{{ PKG_HASH }}_{{ build_number + 100 }}"  # [cuda_compiler_version != "None"]
  script_env:
    - ASTRA_USE_CUDA=ON   # [cuda_compiler_version != "None"]
    - ASTRA_USE_CUDA=OFF  # [cuda_compiler_version == "None"]
    - CUDAARCHS=all
    - CMAKE_GENERATOR=Ninja

requirements:
  build:
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    - cmake >=3.23
    - ninja
  host:
    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]
    # Unit tests link to libboost_unit_test_framework.so
    - libboost-devel
{% if cuda_major == 12 %}
    - cuda-cudart-dev
    - libcufft-dev
{% endif %}
  run:
    - __cuda  # [cuda_compiler_version != "None"]

test:
  requires:
    # Need to pin the version manually because we are ignoring the run_exports
    - {{ pin_compatible('libboost', min_pin='x.x', max_pin='x.x') }}
  source_files:
    - build/tests/astratest  # [unix]
    - build/tests/astratest.exe  # [win]
  commands:
    - test -f $PREFIX/lib/libastra${SHLIB_EXT}                          # [linux]
    - test -f $PREFIX/lib/libastra${SHLIB_EXT}.0                        # [linux]
    - test -f $PREFIX/lib/libastra${SHLIB_EXT}.0.0.0                    # [linux]
    - "LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH ./build/tests/astratest"  # [linux]
    - "DYLD_FALLBACK_LIBRARY_PATH=$CONDA_PREFIX/lib:$DYLD_FALLBACK_LIBRARY_PATH ./build/tests/astratest"  # [osx]
    # Library named differently from upstream because it makes linking
    # consistent between platforms. File links don't work on Windows.
    - if not exist %LIBRARY_LIB%\\astra.lib exit 1  # [win]
    - if not exist %LIBRARY_BIN%\\astra.dll exit 1  # [win]
    - build\\tests\\astratest                       # [win]

about:
  home: http://www.astra-toolbox.com
  license: GPL-3.0-only
  license_file:
    - COPYING
    - lib/licenses/rapidxml.txt
  summary: 'libastra is a C++ library of high-performance GPU primitives for 2D
  and 3D tomography.'

extra:
  recipe-maintainers:
    - askorikov
    - carterbox
